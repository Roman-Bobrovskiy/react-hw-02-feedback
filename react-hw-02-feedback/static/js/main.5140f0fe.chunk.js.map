{"version":3,"sources":["components/Fomr/Form.js","components/Section/Section.js","components/Statistic/Statistic.js","components/Notification/Notification.js","App.js","index.js"],"names":["Form","onHandleChsnge","type","name","onClick","Section","title","children","Statistic","onGood","onNeutral","onBad","onTotal","onCountPositiveFeedback","Notification","message","App","state","Good","Neutral","Bad","handleChange","event","target","setState","prevState","this","goodPercent","countTotal","Math","round","total","countPositiveFeedback","Component","ReactDom","render","document","querySelector"],"mappings":"+MAGe,SAASA,EAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,eAC7B,OACE,8BACE,gCACE,wBAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,EAA3C,kBAGA,wBAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,EAA9C,qBAGA,wBAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,EAA1C,sBCVO,SAASI,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,OACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,QACAC,EACC,EADDA,wBAEA,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCbS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,cAAC,WAAD,UACE,4BAAIA,M,ICAWC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,aAAe,SAACC,GACd,IAAMnB,EAASmB,EAAMC,OAAfpB,KACN,EAAKqB,UAAS,SAACC,GAAD,sBAAmBtB,EAAOsB,EAAUtB,GAAQ,O,gDAG5D,WACE,MAA6BuB,KAAKT,MAElC,OAFA,EAAMC,KAAN,EAAYC,QAAZ,EAAqBC,M,mCAKvB,WACE,IAEIO,EAAsB,IAFXD,KAAKT,MAAdC,KACMQ,KAAKE,aAGjB,OAAOC,KAAKC,MAAMH,K,oBAGpB,WACE,MAA6BD,KAAKT,MAA5BC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,IACjBW,EAAQL,KAAKE,aACjB,OACE,gCACE,cAACvB,EAAD,CAASC,MAAM,yBAAf,SACE,cAACN,EAAD,CAAMC,eAAgByB,KAAKL,iBAE7B,cAAChB,EAAD,CAASC,MAAM,YAAf,SACa,IAAVyB,EACC,cAACjB,EAAD,CAAcC,QAAQ,cAEtB,cAACP,EAAD,CACEC,OAAQS,EACRR,UAAWS,EACXR,MAAOS,EACPR,QAASc,KAAKE,aACdf,wBAAyBa,KAAKM,mC,GA3CXC,aCFjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.5140f0fe.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Form({ onHandleChsnge }) {\n  return (\n    <div>\n      <div>\n        <button type=\"button\" name=\"Good\" onClick={onHandleChsnge}>\n          Good\n        </button>\n        <button type=\"button\" name=\"Neutral\" onClick={onHandleChsnge}>\n          Neutral\n        </button>\n        <button type=\"button\" name=\"Bad\" onClick={onHandleChsnge}>\n          Bad\n        </button>\n      </div>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  onHandleChsnge: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Statistic({\n  onGood,\n  onNeutral,\n  onBad,\n  onTotal,\n  onCountPositiveFeedback,\n}) {\n  return (\n    <ul>\n      <li>Good: {onGood}</li>\n      <li>Neutral: {onNeutral}</li>\n      <li>Bad: {onBad}</li>\n      <li>Total: {onTotal}</li>\n      <li>Positive feedback: {onCountPositiveFeedback} %</li>\n    </ul>\n  );\n}\nStatistic.propTypes = {\n  onGood: PropTypes.number.isRequired,\n  onNeutral: PropTypes.number.isRequired,\n  onBad: PropTypes.number.isRequired,\n  onTotal: PropTypes.number.isRequired,\n  onCountPositiveFeedback: PropTypes.number.isRequired,\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Notification({ message }) {\n  return (\n    <Fragment>\n      <p>{message}</p>\n    </Fragment>\n  );\n}\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Form from \"./components/Fomr/Form\";\nimport Section from \"./components/Section/Section\";\nimport Statistic from \"./components/Statistic/Statistic\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default class App extends Component {\n  state = {\n    Good: 0,\n    Neutral: 0,\n    Bad: 0,\n  };\n\n  handleChange = (event) => {\n    let { name } = event.target;\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotal() {\n    let { Good, Neutral, Bad } = this.state;\n    let total = Good + Neutral + Bad;\n    return total;\n  }\n\n  countPositiveFeedback() {\n    let { Good } = this.state;\n    let total = this.countTotal();\n    let goodPercent = (Good * 100) / total;\n    // return goodPercent;\n    return Math.round(goodPercent);\n  }\n\n  render() {\n    let { Good, Neutral, Bad } = this.state;\n    let total = this.countTotal();\n    return (\n      <div>\n        <Section title=\"Please leasve feedback\">\n          <Form onHandleChsnge={this.handleChange} />\n        </Section>\n        <Section title=\"Statistic\">\n          {total === 0 ? (\n            <Notification message=\"No result\" />\n          ) : (\n            <Statistic\n              onGood={Good}\n              onNeutral={Neutral}\n              onBad={Bad}\n              onTotal={this.countTotal()}\n              onCountPositiveFeedback={this.countPositiveFeedback()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}